/*==========================================================
模块名：界面                            
文件名：interface.cpp
相关文件：iostream.h  interface.h
实现功能：搭建界面，实现用户输入
作者：苏志斌）
版权：MyProject_chat_version2.0  Copyright(C)2017 KDC, All rights reserved
-------------------------------------------------------------------------------------------------------
修改记录：
日  期		版本		修改人		走读人        修改记录

==========================================================*/

#include "../../include/interface.h"
#include "io.h"

using namespace std;

void Interface()
{
    cout << "Hello SuShare" << endl;
	cout << "Telnet Port__2673" << endl;
    cout << "请输入指令:" << endl;
    cout <<"1.连接服务器  2.查看用户  3.发消息  4.发文件  5.断开连接  6.help  7.退出"<<endl;

    u32 g_dwflag = START;     //while 标志位，用于执行程序退出操作

    while (START == g_dwflag)
    {
        s8 achUserChoise[100] = {0};	//用户输入指令
        cin.get(achUserChoise,100);
     
        getchar();
		
		//判断是否输入为帮助请求
		if (!(strcmp(achUserChoise,"h"))||!(strcmp(achUserChoise,"help")) || !(strcmp(achUserChoise,"HELP")) || !(strcmp(achUserChoise,"H")))
		{
			cout <<"1.连接服务器  2.查看用户  3.发消息  4.发文件  5.断开连接  6.help  7.退出"<<endl;
		}
		//判断输入指令
        else if(achUserChoise[0] > '0' && achUserChoise[0] < '9'&& achUserChoise[1] == NULL)
        {
            switch (achUserChoise[0])
			{
			case CONNECT:   //  连接
				ConnectServerCMD();
				break;

            case REQLIST:   //拉列表         
                ReqUserListCMD();
                break;

            case SENDMSG:   // 发消息
				SendMsgCMD();	
                break;

            case  SENDFILE:  //发文件
                SendFileCMD();
                break;

            case INTERRUPT:   //断开连接
			    InterruptConnectCMD();
                break;

            case HELP:        //help命令
                cout <<"1.连接服务器  2.查看用户  3.发消息  4.发文件  5.断开连接  6.help  7.退出"<<endl;
                break;

            case QUIT:         //退出     
                cout << "正在退出……" << endl;
                g_dwflag = END;
                break;

            default:
                cout << "输入错误，请重新输入" <<endl;
                break;
			}
        }
		else
		{
			cout <<"input illegal" << endl;
		}
        cin.clear();
        cin.sync();
    }
    return;
}

BOOL32 UserInputCheck(u32 dwRetVal,s8 *pchContent)	//用户输入检测
{
	switch(dwRetVal)
	{
	case IPCHECK:  //ip地址检测合法性
		{
			u32 dwTempA = -1,dwTempB = -1,dwTempC = -1,dwTempD = -1;
			s8 achIpTemp[200] = {0};
			sscanf(pchContent,"%d.%d.%d.%d%s",&dwTempA,&dwTempB,&dwTempC,&dwTempD,achIpTemp);
			if (dwTempA > 255 || dwTempA < 0||dwTempB > 255 || dwTempB < 0||dwTempC > 255 || dwTempC < 0||dwTempD > 255 || dwTempD < 0)
			{
				return FALSE;
			}
			if (achIpTemp[0] != 0)
			{
				return FALSE;
			}
			return TRUE;
		}
		break;

	case USERNAMECHECK:		//用户名检测
		{	
			if (pchContent[19] == NULL && strlen(pchContent) != 0)
			{
				return TRUE;				
			} 
			return FALSE;
		}
		break;

	case MSGCONTCHECK:		//消息格式检测
		{
			u32 dwTemp ;
			for (dwTemp = 0;dwTemp < sizeof(pchContent);dwTemp++)
			{
				if (pchContent[1] == ',' || pchContent[2] == ',')
				{
					if ( pchContent[3] != NULL || pchContent[2] != NULL)
					{
						if (pchContent[0] >= '0' && pchContent[0] < '9')
						{
							return TRUE;
						}
						
					}					
				}
			}
			return FALSE;
		}
		break;

	case FILENAMECONTENT:	//文件存在检测
		{
			if (0 == access(pchContent,0))
			{
				return TRUE;
			}
			return FALSE;
		}
		break; 

	default:
		return FALSE;
		break;
	}
}

